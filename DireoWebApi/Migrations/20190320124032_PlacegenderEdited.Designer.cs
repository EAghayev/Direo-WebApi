// <auto-generated />
using System;
using DireoWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DireoWebApi.Migrations
{
    [DbContext(typeof(DireoContext))]
    [Migration("20190320124032_PlacegenderEdited")]
    partial class PlacegenderEdited
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DireoWebApi.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DireoWebApi.Models.Place", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("Address")
                        .HasMaxLength(150);

                    b.Property<string>("CategoryId")
                        .HasMaxLength(36);

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<bool>("HideContactInfo");

                    b.Property<bool>("HideMap");

                    b.Property<string>("Lat")
                        .HasMaxLength(100);

                    b.Property<string>("Long")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.Property<string>("Phone")
                        .HasMaxLength(100);

                    b.Property<string>("Photo")
                        .HasMaxLength(100);

                    b.Property<string>("PhotoFileName")
                        .HasMaxLength(100);

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<decimal>("Ranking");

                    b.Property<int>("ReviewCount");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(250);

                    b.Property<string>("Video")
                        .HasMaxLength(250);

                    b.Property<string>("Website")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("DireoWebApi.Models.PlaceFaqs", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("PlaceId")
                        .HasMaxLength(36);

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("PlaceFaqs");
                });

            modelBuilder.Entity("DireoWebApi.Models.PlaceSliderPhotos", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("Photo")
                        .HasMaxLength(100);

                    b.Property<string>("PhotoName")
                        .HasMaxLength(100);

                    b.Property<string>("PlaceId")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("PlaceSliderPhotos");
                });

            modelBuilder.Entity("DireoWebApi.Models.PlacesTags", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("PlaceId")
                        .HasMaxLength(36);

                    b.Property<string>("TagId")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TagId");

                    b.ToTable("PlacesTags");
                });

            modelBuilder.Entity("DireoWebApi.Models.Tag", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("DireoWebApi.Models.WorkHour", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<TimeSpan>("Close")
                        .HasColumnType("time");

                    b.Property<int>("Day");

                    b.Property<TimeSpan>("Open")
                        .HasColumnType("time");

                    b.Property<string>("PlaceId")
                        .IsRequired()
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("WorkHours");
                });

            modelBuilder.Entity("DireoWebApi.Models.Place", b =>
                {
                    b.HasOne("DireoWebApi.Models.Category", "Category")
                        .WithMany("Places")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("DireoWebApi.Models.PlaceFaqs", b =>
                {
                    b.HasOne("DireoWebApi.Models.Place", "Place")
                        .WithMany("PlaceFaqs")
                        .HasForeignKey("PlaceId");
                });

            modelBuilder.Entity("DireoWebApi.Models.PlaceSliderPhotos", b =>
                {
                    b.HasOne("DireoWebApi.Models.Place", "Place")
                        .WithMany("PlaceSliderPhotos")
                        .HasForeignKey("PlaceId");
                });

            modelBuilder.Entity("DireoWebApi.Models.PlacesTags", b =>
                {
                    b.HasOne("DireoWebApi.Models.Place", "Place")
                        .WithMany("PlacesTags")
                        .HasForeignKey("PlaceId");

                    b.HasOne("DireoWebApi.Models.Tag", "Tag")
                        .WithMany("PlacesTags")
                        .HasForeignKey("TagId");
                });

            modelBuilder.Entity("DireoWebApi.Models.WorkHour", b =>
                {
                    b.HasOne("DireoWebApi.Models.Place", "Place")
                        .WithMany("WorkHours")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
